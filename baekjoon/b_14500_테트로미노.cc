#include <iostream>
#include <vector>

using namespace std;

typedef struct{
    int r,c;
}POINT;

int tsize[] = {2, 1, 8, 4, 4};

POINT T[5][8][4] = {
    {
        {{0,0}, {0,1}, {0,2}, {0,3}}, // ----
        {{0,0}, {1,0}, {2,0}, {3,0}} // ㅣ
    },
    {
        {{0,0}, {0,1}, {1,0}, {1,1}} // ㅁ
    },
    {
        {{0,0}, {1,0}, {2,0}, {2,1}}, // L
        {{0,1}, {1,1}, {2,1}, {2,0}}, // m

        {{1,0}, {1,1}, {1,2}, {0,2}},
        {{0,0}, {0,1}, {0,2}, {1,2}},
        
        {{0,0}, {0,1}, {1,1}, {2,1}},
        {{0,1}, {0,0}, {1,0}, {2,0}},
        
        {{0,0}, {0,1}, {0,2}, {1,0}},
        {{1,0}, {1,1}, {1,2}, {0,0}} 
    },
    {
        {{0,0}, {1,0}, {1,1}, {2,1}}, // ㄹ
        {{0,1}, {1,1}, {1,0}, {2,0}}, // m
        {{1,0}, {1,1}, {0,1}, {0,2}},
        {{0,0}, {0,1}, {1,1}, {1,2}}
    },
    {
        {{0,0}, {0,1}, {0,2}, {1,1}}, // ㅜ
        {{0,0}, {1,0}, {2,0}, {1,1}}, //
        {{1,0}, {1,1}, {1,2}, {0,1}},
        {{1,0}, {0,1}, {1,1}, {2,1}}
    }
};

int main(){
    int i, j, k, r, c, rr, cc, sum, max=0, N, M, board[500][500];
    
    scanf("%d %d", &N, &M);
    for(r=0; r<N; r++){
        for(c=0; c<M; c++){
            scanf("%d",&board[r][c]);
        }
    }
    for(r=0; r<N; r++){
        for(c=0; c<M; c++){
            for(i=0; i<5; i++){
                for(j=0; j<tsize[i]; j++){
                    sum = 0;
                    for(k=0; k<4; k++){
                        rr = r+T[i][j][k].r;
                        cc = c+T[i][j][k].c;
                        if ((rr >= N) || (cc >= M)) continue;
                        sum+= board[rr][cc];
                    }
                    max = max<sum? sum:max;
                }
            }
        }
    }
    printf("%d", max);
}